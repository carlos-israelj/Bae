/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BaeSensorRegistry,
  BaeSensorRegistryInterface,
} from "../BaeSensorRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "deviceId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "SensorDataSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allReadings",
    outputs: [
      {
        internalType: "string",
        name: "deviceId",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "ciphertext",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "nonce",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestReading",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "deviceId",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "ciphertext",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nonce",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct BaeSensorRegistry.SensorData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getReading",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "deviceId",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "ciphertext",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "nonce",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct BaeSensorRegistry.SensorData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReadingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "deviceId",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "ciphertext",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "nonce",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "submitSensorData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReadings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610aed908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806287a788146106c057806339bf8614146105d05780639e6fb472146105b2578063aa4e05461461052b578063d6dd2f3d1461050d5763d734d1d51461005d57600080fd5b346105085760a0366003190112610508576004356001600160401b03811161050857366023820112156105085761009e903690602481600401359101610938565b6024356001600160401b038111610508576100bd90369060040161097e565b906044356001600160401b038111610508576100dd90369060040161097e565b916064356001600160401b038111610508576100fd90369060040161097e565b92608435916040519161010f836108fa565b848352602083019182526040830190815260608301958652608083019084825260a0840192438452600054600160401b8110156103a75780600161015692016000556107ed565b9590956104f257518051906001600160401b0382116103a7576101838261017d895461083d565b89610a52565b602090601f831160011461048b576101a6929160009183610331575b5050610aa4565b85555b51805160018601916001600160401b0382116103a7576101d3826101cd855461083d565b85610a52565b602090601f8311600114610424576101f5929160009183610331575050610aa4565b90555b51805160028501916001600160401b0382116103a75761021c826101cd855461083d565b602090601f83116001146103bd5761023e929160009183610331575050610aa4565b90555b9451805190959060038401906001600160401b0381116103a75761026f81610269845461083d565b84610a52565b6020601f821160011461033c5790806102969260059798999a600092610331575050610aa4565b90555b51600484015551910155600154600019811461031b5760010160015560005491600019830192831161031b577f3ff7b81994374a5c226f473bb0ed1a108bb9a646a7041c9f855bf06177ec19ee9161030160609260206040519282848094519384920161072b565b8101039020936040519182524360208301526040820152a2005b634e487b7160e01b600052601160045260246000fd5b01519050388061019f565b601f1982169883600052816000209960005b81811061038f57509160059798999a91846001959410610376575b505050811b019055610299565b015160001960f88460031b161c19169055388080610369565b838301518c556001909b019a6020938401930161034e565b634e487b7160e01b600052604160045260246000fd5b90601f1983169184600052816000209260005b81811061040c57509084600195949392106103f3575b505050811b019055610241565b015160001960f88460031b161c191690553880806103e6565b929360206001819287860151815501950193016103d0565b90601f1983169184600052816000209260005b818110610473575090846001959493921061045a575b505050811b0190556101f8565b015160001960f88460031b161c1916905538808061044d565b92936020600181928786015181550195019301610437565b90601f1983169188600052816000209260005b8181106104da57509084600195949392106104c1575b505050811b0185556101a9565b015160001960f88460031b161c191690553880806104b4565b9293602060018192878601518155019501930161049e565b634e487b7160e01b600052600060045260246000fd5b600080fd5b34610508576000366003190112610508576020600054604051908152f35b346105085760003660031901126105085761054461099c565b50600054801561057f57600019810190811161031b5761056f61056961057b926107ed565b506109d0565b60405191829182610773565b0390f35b60405162461bcd60e51b815260206004820152600b60248201526a4e6f2072656164696e677360a81b6044820152606490fd5b34610508576000366003190112610508576020600154604051908152f35b3461050857602036600319011261050857600435600054811015610508576105fa610687916107ed565b50604051906106148261060d8184610877565b0383610915565b60405161062f816106288160018601610877565b0382610915565b6106b1604051610646816106288160028801610877565b6106a3604051916106658361065e8160038a01610877565b0384610915565b6106956005600488015497015495604051998a9960c08b5260c08b019061074e565b9089820360208b015261074e565b90878203604089015261074e565b90858203606087015261074e565b91608084015260a08301520390f35b34610508576020366003190112610508576004356106dc61099c565b506000548110156106f65761056f61056961057b926107ed565b60405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606490fd5b60005b83811061073e5750506000910152565b818101518382015260200161072e565b906020916107678151809281855285808601910161072b565b601f01601f1916010190565b6020815260c060a06107db6107c56107af610799875186602089015260e088019061074e565b6020880151878203601f1901604089015261074e565b6040870151868203601f1901606088015261074e565b6060860151858203601f1901608087015261074e565b93608081015182850152015191015290565b6000548110156108275760008080526006919091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630191565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801561086d575b602083101461085757565b634e487b7160e01b600052602260045260246000fd5b91607f169161084c565b600092918154916108878361083d565b80835292600181169081156108dd57506001146108a357505050565b60009081526020812093945091925b8383106108c3575060209250010190565b6001816020929493945483858701015201910191906108b2565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b038211176103a757604052565b601f909101601f19168101906001600160401b038211908210176103a757604052565b9192916001600160401b0382116103a75760405191610961601f8201601f191660200184610915565b829481845281830111610508578281602093846000960137010152565b9080601f830112156105085781602061099993359101610938565b90565b604051906109a9826108fa565b600060a0836060815260606020820152606060408201526060808201528260808201520152565b906040516109dd816108fa565b60a0600582946040516109f4816106288185610877565b8452604051610a0a816106288160018601610877565b6020850152604051610a23816106288160028601610877565b6040850152604051610a3c816106288160038601610877565b6060850152600481015460808501520154910152565b601f8211610a5f57505050565b6000526020600020906020601f840160051c83019310610a9a575b601f0160051c01905b818110610a8e575050565b60008155600101610a83565b9091508190610a7a565b8160011b916000199060031b1c1916179056fea2646970667358221220a4cf6ab99c4bc2e40abb74f0e56eef3ad358e708977a27fd3e1a12f71c453b4764736f6c634300081c0033";

type BaeSensorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaeSensorRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaeSensorRegistry__factory extends ContractFactory {
  constructor(...args: BaeSensorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaeSensorRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaeSensorRegistry__factory {
    return super.connect(runner) as BaeSensorRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaeSensorRegistryInterface {
    return new Interface(_abi) as BaeSensorRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaeSensorRegistry {
    return new Contract(address, _abi, runner) as unknown as BaeSensorRegistry;
  }
}
